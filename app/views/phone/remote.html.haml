:coffeescript
  aws_wss = "ws://162.243.120.86:3010"
  window.socket = undefined;
  
  $ ->
    start_socket = ->
      connect_sock = new WebSocket(aws_wss, ["http"])
      
      connect_sock.onopen = (event) ->
        $("#connect").addClass("disabled")
        $("#connect").addClass("green")
        $("#connect").removeClass
        
      connect_sock.onclose = (event) ->
        $("#connect").removeClass("disabled")
        $("#connect").removeClass("green")
        $("#connect").addClass("red")
        
      connect_sock.onerror = (event) ->
        alertify.notify "Error"
        
      connect_sock.onmessage = (event) ->
        eventData = JSON.parse(event.data)
        console.log("Server >>", JSON.parse(event.data))
        
      return connect_sock

    $("#connect").click (event) ->
      window.socket = true
      alertify.notify "Connecting to socket"
      this.disabled = true
      $("#connect").addClass("green")
      
      window.socket = start_socket()
      console.log(window.socket)
      
    $("[name=up]").click ->
      up = {action: "move", remote_id: $("[name=remote_id]").val(), color_id: $("[name=color_id]").val(), direction: "up"}
      if window.socket == undefined
        alertify.error "Socket does not exist. Connect first"
        return
      
      if up.remote_id == ""
        alertify.notify "Please specify a remote ID"
        return
        
      if window.socket.readyState == WebSocket.OPEN
        prefix = "Server <<"
        stringy = JSON.stringify(up)
        request = stringy
        window.socket.send(request)
        console.log("Server << \n" +request)
      
    $("[name=down]").click ->
      down = {action: "move", remote_id: $("[name=remote_id]").val(), color_id: $("[name=color_id]").val(), direction: "down"}
      if window.socket == undefined
        alertify.error "Socket does not exist. Connect first"
        return
      
      if down.remote_id == ""
        alertify.notify "Please specify a remote ID"
        return
        
      if window.socket.readyState == WebSocket.OPEN
        prefix = "Server
        stringy = JSON.stringify(down)
        request = stringy
        window.socket.send(request)
        console.log("Server << \n" +request)
      
    $("[name=right]").click ->
      right = {action: "move", remote_id: $("[name=remote_id]").val(), color_id: $("[name=color_id]").val(), direction: "right"}
      if window.socket == undefined
        alertify.error "Socket does not exist. Connect first"
        return
      
      if right.remote_id == ""
        alertify.notify "Please specify a remote ID"
        return
        
      if window.socket.readyState == WebSocket.OPEN
        prefix = "Server <<"
        stringy = JSON.stringify(right)
        request = stringy
        window.socket.send(stringy)
        console.log("Server << \n" +request)
      
      
    $("[name=left]").click
      left = {action: "move", remote_id: $("[name=remote_id]").val(), color_id: $("[name=color_id]").val(), direction: "left"}
      if window.socket == undefined
        alertify.error "Socket does not exist. Connect first"
        return
      
      
      if left.remote_id == ""
        alertify.notify "Please specify a remote ID"
        return
        
      if window.socket.readyState == WebSocket.OPEN
        prefix = "Server <<"
        stringy = JSON.stringify(left)
        request = stringy
        window.socket.send(request)
        console.log("Server << \n" +request)
      
   


/ DO NOT MODIFY CODE BELOW THIS LINE
.mobile
  .hero
    %form#remote.ui.form
      %input{name: "action", type:"hidden", value:"move"}
      .field
        .ui.input.action.fluid
          %input{name: "remote_id", type:"number", placeholder: "ID"}
          %button.ui.button#connect Connect
        .field
          %input.ui.input{name: "color_id", type:"color"}
          
    .field#directional-pad
      %button.ui.button.icon.circular.dummy
        %i.icon
      %button.ui.button.icon.circular{name:"up"}
        %i.icon.arrow.alternate.circle.up
      %button.ui.button.icon.circular.dummy
        %i.icon
      %button.ui.button.icon.circular{name:"left"}
        %i.icon.arrow.alternate.circle.left
      %button.ui.button.icon.circular.dummy
        %i.icon
      %button.ui.button.icon.circular{name:"right"}
        %i.icon.arrow.alternate.circle.right
      %button.ui.button.icon.circular.dummy
        %i.icon
      %button.ui.button.icon.circular{name:"down"}
        %i.icon.arrow.alternate.circle.down
      %button.ui.button.icon.circular.dummy
        %i.icon
      
:scss
  html{
    font-size: 18pt; /* Root size */
  }
  
  html, body, .mobile{
    width: 100% !important;
    height: 100% !important;
    overflow: hidden;
  }
  input[type="color"]{
    height: 60px;
  }
  #remote{
    width: 100%;
  }
  .hero{
    padding: 30px;
    height: 100%; 
    width: 100%;
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;
    align-items: center;
  }
  
  #directional-pad{
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    align-items: center;
    align-content: center;
    width: 100%;
    height: 100%;
    button{
      margin: 0;
      flex-basis: 33.33%;
      height: 90px;
      font-size: 2em;
      &.dummy{
        visibility: hidden;
      }
    }
  }
    
